{"version":3,"sources":["img/logo.svg","Auth.js","CodeEditor/CodeEditor.js","ClassSelector/ClassSelector.js","NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","Object","classCallCheck","this","console","log","process","REACT_APP_BASE_URL","REACT_APP_BACKEND_URL","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","setSession","idTokenPayload","exp","logout","returnTo","_this2","checkSession","CodeEditor","react_default","a","createElement","Row","Col","xs","md","dangerouslySetInnerHTML","__html","marked","props","markdown","lib_default","style","fontSize","border","width","mode","theme","name","onLoad","onChange","showPrintMargin","showGutter","highlightActiveLine","value","code","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","className","Component","Editor","_ref2","data","match","content","params","labID","src_CodeEditor_CodeEditor","ClassSelector","_ref","Link","to","concat","url","Route","path","component","exact","render","withRouter","class","src","logo","alt","height","id","Home","App","_React$createElement","NavBar_NavBar","defineProperty","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93b00db7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3d6f3e4b.svg\";","import auth0 from 'auth0-js';\n\nclass Auth {\n\n    constructor() {\n        console.log(process.env.REACT_APP_BASE_URL);\n        console.log(process.env.REACT_APP_BACKEND_URL);\n        this.auth0 = new auth0.WebAuth({\n            // the following three lines MUST be updated\n            domain: 'mlacademy.auth0.com',\n            audience: 'https://mlacademy.auth0.com/userinfo',\n            clientID: '3W0XMI0sdQwqyygLalP0rcb5dLo22ARA',\n            redirectUri: process.env.REACT_APP_BASE_URL + '/callback',\n            responseType: 'id_token',\n            scope: 'openid profile'\n        });\n\n        this.getProfile = this.getProfile.bind(this);\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.signOut = this.signOut.bind(this);\n    }\n\n    getProfile() {\n        return this.profile;\n    }\n\n    getIdToken() {\n        return this.idToken;\n    }\n\n    isAuthenticated() {\n        return new Date().getTime() < this.expiresAt;\n    }\n\n    signIn() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            this.auth0.parseHash((err, authResult) => {\n                if (err) return reject(err);\n                if (!authResult || !authResult.idToken) {\n                    return reject(err);\n                }\n                this.setSession(authResult);\n                resolve();\n            });\n        })\n    }\n\n    setSession(authResult) {\n        this.idToken = authResult.idToken;\n        this.profile = authResult.idTokenPayload;\n        // set the time that the id token will expire at\n        this.expiresAt = authResult.idTokenPayload.exp * 1000;\n    }\n\n    signOut() {\n        this.auth0.logout({\n            returnTo: process.env.REACT_APP_BASE_URL,\n            clientID: '3W0XMI0sdQwqyygLalP0rcb5dLo22ARA',\n        });\n    }\n\n    silentAuth() {\n        return new Promise((resolve, reject) => {\n            this.auth0.checkSession({}, (err, authResult) => {\n                if (err) return reject(err);\n                this.setSession(authResult);\n                resolve();\n            });\n        });\n    }\n}\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;","import React, { Component } from 'react';\nimport brace from 'brace';\nimport marked from 'marked';\n\nimport AceEditor from 'react-ace';\nimport { Row, Col, Button } from 'reactstrap';\nimport 'brace/mode/python';\nimport 'brace/theme/monokai';\nimport 'brace/theme/textmate';\nimport 'brace/mode/java';\n\nclass CodeEditor extends Component {\n\n    render() {\n        const style = { fontSize: '14px !important', border: '1px solid lightgray', width: '100%' };\n        return (\n            <div>\n                <Row>\n                    <Col xs={6} md={6}>\n                        <article dangerouslySetInnerHTML={{ __html: marked(this.props.markdown) }}></article>\n                    </Col>\n                    <Col xs={6} md={6}>\n                        <AceEditor style={style}\n                            mode=\"python\"\n                            theme=\"textmate\"\n                            name=\"blah2\"\n                            onLoad={this.onLoad}\n                            onChange={this.onChange}\n                            fontSize={14}\n                            showPrintMargin={true}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.props.code}\n                            setOptions={{\n                                enableBasicAutocompletion: false,\n                                enableLiveAutocompletion: false,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                            }} />\n                        <br />\n                        <button className=\"btn btn-dark right\" >Sign Out</button>\n                    </Col>\n                </Row>\n\n\n\n            </div>\n        );\n    }\n}\n\n\nexport default CodeEditor;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\n\nimport { content } from '../labs.json';\n\nfunction ClassSelector({ match }) {\n    return (\n        <div>\n            <h2>Select a Lab</h2>\n            <ul>\n                <li>\n                    <Link to={`${match.url}/lab1`}>Lab 1 - Hello World</Link>\n                </li>\n                <li>\n                    <Link to={`${match.url}/lab2`}>Lab 2 - Hello World</Link>\n                </li>\n                <li>\n                    <Link to={`${match.url}/lab3`}>Lab 3 - Hello World</Link>\n                </li>\n            </ul>\n\n            <Route path={`${match.path}/:labID`} component={Editor} />\n            <Route\n                exact\n                path={match.path}\n                render={() => <h3>Please select a topic.</h3>}\n            />\n        </div >\n    );\n}\n\nfunction Editor({ match }) {\n    var ex = \"ex1\";\n    var data;\n    if (!content[match.params.labID]) {\n        data =\n            [\n                \"# Error: Lesson Not Found\",\n                \"#Error: Lesson Not Found\"\n            ];\n    } else {\n        data = content[match.params.labID][ex];\n    }\n\n    return (\n        <div>\n            <CodeEditor markdown={data[0]} code={data[1]} />\n        </div>\n    );\n\n}\n\nexport default ClassSelector;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from '../Auth';\nimport logo from \"../img/logo.svg\";\n\n//import { Nav, Navbar, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport ClassSelector from '../ClassSelector/ClassSelector';\n\nfunction NavBar(props) {\n    const signOut = () => {\n        auth0Client.signOut();\n        props.history.replace('/');\n    };\n\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <Link to=\"/\" class=\"navbar-brand\"><img src={logo} alt=\"logo\" height=\"24px\" /></Link>\n            <div class=\"navbar-collapse collapse\" id=\"navbarColor01\">\n                <ul class=\"navbar-nav mr-auto\">\n                    <li class=\"nav-item\">\n                        <Link to=\"/\" class=\"nav-link\">Home</Link>\n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"/editor\" class=\"nav-link\">Labs</Link>\n                    </li>\n                </ul>\n            </div>\n\n        </nav >\n    );\n}\n\n/*\n        <nav className=\"fixed-top navbar navbar-expand-lg navbar-dark bg-primary\">\n            <Link className=\"navbar-brand\" to=\"/\">\n                mlAcademy\n            </Link>\n            <div class=\"container\">\n                <div id=\"navbarColor01\">\n\n                    <ul class=\"navbar-nav mr-auto\">\n                        <li class=\"nav-item\">\n                            <Link to=\"/\" class=\"nav-link\">Home</Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link to=\"/requirements\" class=\"nav-link\">Requirements</Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link to=\"/research\" class=\"nav-link\">Research</Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link to=\"/hci\" class=\"nav-link\">HCI</Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link to=\"/prototype\" class=\"nav-link\">Prototype</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        {\n                            !auth0Client.isAuthenticated() &&\n                            <button className=\"btn btn-dark navbar-right\" onClick={auth0Client.signIn}>Sign In</button>\n                        }\n                        {\n                            auth0Client.isAuthenticated() &&\n                            <div>\n                                <label className=\"mr-2 text-white\">{auth0Client.getProfile().name}</label>\n                                <button className=\"btn btn-dark\" onClick={() => { signOut() }}>Sign Out</button>\n                            </div>\n                        }\n                    </ul>\n                </div>\n            </div>\n                    </nav>*/\nexport default withRouter(NavBar);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from \"./img/logo.svg\";\n\nimport { Col, Row } from 'reactstrap';\nimport auth0Client from './Auth';\nimport NavBar from './NavBar/NavBar';\nimport ClassSelector from \"./ClassSelector/ClassSelector\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <br />\n        <Row>\n          <Col xs={0} md={1} />\n          <Col xs={12} md={10}>\n            <Route exact path=\"/\" exact component={Home} />\n            <Route path=\"/editor\" component={ClassSelector} />\n          </Col>\n          <Col xs={0} md={1} />\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n      Welcome to the mlAcademy test site | This is not a production build\n    </div>\n  );\n}\n\nfunction About({ match }) {\n  return (\n    <div>\n      <h2>About</h2>\n      Wow, another learning platform\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}